
/* NEW TEST FILE */
package Rectangle;

public class TestREctangle () {
    public static void main(String args[]) {
        Rectangle bigRectangle = new Rectangle(100, 500);
        Rectangle smallRectangle = new Rectangle(5, 10);
        Rectamngle squareRectangle = new Rectangle(5, 5);

        System.out.println(bigRectangle.getArea()); // returns the area of bigRectangle
        System.out.println(smallRectangle.getArea()); // returns the area of smallRectangle
        System.out.println(squareRectangle.getArea()); // returns the area of squareRectangle

        System.out.println(bigRectangle.getHeight()); // returns the height of the rectangle

        defaultRectangle.setWidth(2); // sets the width to 2
        defaultRectangle.setHeight(4); // sets the height to 4

        bigRectangle.grow(100,100); // grows the width and height to 200, 600

        System.out.println(bigRectangle.getArea()); // returns 120000 with the new values
    }
}

/* CLASS FILE */
package Rectangle;

public class Rectangle {

    // classes contain instance variables that are only for that class
    // they are private because you dont want outside code to access them
    private double width;
    private double height;

    // constructor
    public Rectangle(double w, double h) { // think of a function from C
        width = w; // assign the variables inside the parenthesis to to instance variables
        height = h;
    }

    // overloading
    // it will know when to use constructors depending on what variables you are sending in
    public Rectangle(double length) {
        width = length;
        height = length;
    }

    // creating a getter method
    public double getWidth() {
        return width;
    }

    // creating a setter method
    public void setWidth(double w) {
        width = w;
    }

    public double getHeight() {
        return height;
    }

    public void setHeight(double height){
        this.height = height; //this.height is the instance height. Since both are the same name one of them require this.###
    }

    public getArea() {
        return width * height;
    }

    public void grow(double width, double height) {
        this.width += width;
        this.height += height;
    }

    public static sum(double a, double b) { // a good static method because it does not depend on instance variables
        return a + b;                       // only use static methods when you are passing variables, not using the instance
    }
}
